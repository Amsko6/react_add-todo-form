{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","TodoList","todos","map","getUser","usersFromServer","find","mapedTodos","todosFromServer","mapedUsers","value","App","useState","setTodos","setTitle","setUserId","isValidTitle","setIsValidTitle","isValidUser","setIsValidUser","action","method","onSubmit","event","preventDefault","addedTodoId","reduce","max","todosArr","addedTodo","htmlFor","type","onChange","target","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c7de9b2.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\ninterface UserInfoProps {\n  user: User,\n}\n\nexport const UserInfo: React.FC<UserInfoProps> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface TodoInfoProps {\n  todo: Todo,\n}\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => {\n  const {\n    completed,\n    title,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      className={`TodoInfo ${completed ? 'TodoInfo--completed' : ''}`}\n      data-id={id}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface TodoListProps {\n  todos: Todo[],\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => <TodoInfo todo={todo} key={todo.id} />)}\n  </section>\n);\n","import './App.scss';\nimport React, { FormEventHandler, useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const mapedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const mapedUsers = usersFromServer.map(user => {\n  const { id, name } = user;\n\n  return (\n    <option value={id} key={id}>{name}</option>\n  );\n});\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState(mapedTodos);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [isValidTitle, setIsValidTitle] = useState(true);\n  const [isValidUser, setIsValidUser] = useState(true);\n\n  const handleSubmit: FormEventHandler = (event) => {\n    event.preventDefault();\n\n    if (!title) {\n      setIsValidTitle(false);\n    }\n\n    if (!userId) {\n      setIsValidUser(false);\n    }\n\n    if (title && userId) {\n      const addedTodoId = todosFromServer.reduce(\n        (max, todosArr) => (\n          todosArr.id > max ? todosArr.id : max\n        ), 0,\n      ) + 1;\n\n      const addedTodo = {\n        userId,\n        title,\n        id: addedTodoId,\n        completed: false,\n        user: getUser(userId),\n      };\n\n      setTitle('');\n      setUserId(0);\n      setIsValidTitle(true);\n      setIsValidUser(true);\n      setTodos([...todos, addedTodo]);\n    }\n  };\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsValidTitle(true);\n  };\n\n  const handleUserId = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setIsValidUser(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            Title:\n          </label>\n\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleTitle}\n            id=\"title\"\n            placeholder=\"Enter title here\"\n          />\n\n          {!isValidTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">\n            User:\n          </label>\n          <select\n            data-cy=\"userSelect\"\n            name=\"user\"\n            value={userId}\n            onChange={handleUserId}\n            id=\"user\"\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {mapedUsers}\n          </select>\n\n          {!isValidUser && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}